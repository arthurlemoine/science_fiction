---
title: "Planets"
author: "Arthur LEMOINE"
format: html
editor: visual
execute: 
  echo: false
  warning: false
  error: false
---

```{r}
library(dplyr)
library(tidyr)
library(vroom)
library(ggplot2)
library(here)
library(knitr)
library(stringr)

here::i_am("science_fiction.Rproj")
```

## Question 1

I clearly uploaded everything before reading but no worries it's fixed.

## Question 2

Link to github: https://github.com/arthurlemoine/science_fiction.git

## Question 3

```{r}
planets <- vroom(here("data", "PLANETS.csv"), na = '_')

num_planets <- nrow(planets)
num_variables <- ncol(planets)
numerical_variables <- sum(sapply(planets, is.numeric))

# Print validation message
if (num_planets == 860 && num_variables == 8 && numerical_variables == 5) {
  cat("Data loaded successfully!")
} else {
  cat("Error: Invalid loading process.")
}

head_df <- planets %>%
  head(n=10)

knitr::kable(head_df, digits = 0)
```

This dataset is made of `r nrow(planets)` planets described by `r ncol(planets)` variables.

BONUS: a nice table of the 10 first rows.

## Question 4

```{r}
summary_table <- tibble(
  Metric = c("Number of Observations", "Number of Variables", "Number of Missing Values", "Observations with Missing Values"),
  Value = c(
    nrow(planets),
    ncol(planets),
    sum((is.na(planets))),
    sum(rowSums(is.na(planets)) > 0)
  ))

knitr::kable(summary_table)
```

## Question 5

```{r}
filtered_data <- planets %>%
  filter(!is.na(`Radius (Earth)`) & !is.na(`Density (Earth)`))

ggplot(filtered_data, aes(x = `Density (Earth)`, y = `Radius (Earth)`)) +
  geom_point() +
  labs(title = "Radius of a Planet as a Function of Density",
       x = "Density (Earth)",
       y = "Radius (Earth)")
```

## Question 6

```{r}

# Filter out missing values in numerical variables
numerical_data <- planets %>%
  select_if(is.numeric)

# Apply operations to find extreme planets for all numerical variables
extreme_planets_table <- numerical_data %>%
  gather(key = "Variable", value = "Value") %>%
  group_by(Variable) %>%
  slice(c(which.max(Value), which.min(Value))) %>%
  mutate(Extreme = ifelse(row_number() == 1, "Maximum", "Minimum"))

# Print the table
kable(extreme_planets_table, format = "markdown", digits = 2)



```

## Question 7

```{r}

# Extract terrain types
terrain_df <- planets %>%
  reframe("planet_identifier" = PLANET_NUMBER, "types" = str_split(`terrain type`, "\\|")) %>%
  unnest(types) %>%
  rename(`terrain type` = types)

# Extract climate types
climate_df <- planets %>%
  reframe("planet_identifier" = PLANET_NUMBER, "types" = str_split(type_climate, "\\|")) %>%
  unnest(types) %>%
  rename(climate_type = types)

# Print the first few rows of the extracted data frames
knitr::kable(head(terrain_df))
knitr::kable(head(climate_df))

```

## Question 8

```{r}
# Distribution of climates per planet
climate_plot <- climate_df %>%
  group_by(planet_identifier) %>%
  summarise(num_climates = n()) %>%
  ggplot(aes(x = num_climates)) +
  geom_bar(stat = "count", fill = "darkblue") +
  labs(title = "Distribution of Number of Climates per Planet",
       x = "Number of Climates",
       y = "Count")

# Distribution of terrain types per planet
terrain_plot <- terrain_df %>%
  group_by(planet_identifier) %>%
  summarise(num_terrain_types = n()) %>%
  ggplot(aes(x = num_terrain_types)) +
  geom_bar(stat = "count", fill = "darkblue") +
  labs(title = "Distribution of Number of Terrain Types per Planet",
       x = "Number of Terrain Types",
       y = "Count")

# Print the plots
print(climate_plot)
print(terrain_plot)

```

## Question 9

```{r}
# Extract climate types and create a data frame
climate_df <- planets %>%
  reframe("planet_identifier" = PLANET_NUMBER, "types" = str_split(type_climate, "\\|")) %>%
  unnest(types) %>%
  rename(climate_type = types, PLANET_NUMBER = planet_identifier)

# Merge with the main data frame based on PLANET_NUMBER
merged_data <- left_join(planets, climate_df, by = "PLANET_NUMBER")

# Create a data frame with separate rows for each combination of planet, climate, and mass
mass_by_climate_df <- merged_data %>%
  select(PLANET_NUMBER, mass, climate_type)

# Plot the distribution of mass conditioned by climates
mass_distribution_plot <- mass_by_climate_df %>%
  ggplot(aes(x = climate_type, y = mass, fill=climate_type)) +
  geom_boxplot()+
  labs(title = "Distribution of Mass Conditioned by Climates",
       x = "Climate Type",
       y = "Mass")

# Print the plot
print(mass_distribution_plot)

```
